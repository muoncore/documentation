{
  "_args": [
    [
      {
        "raw": "jsonutil@0.2.0",
        "scope": null,
        "escapedName": "jsonutil",
        "name": "jsonutil",
        "rawSpec": "0.2.0",
        "spec": "0.2.0",
        "type": "version"
      },
      "/home/david/Development/microux/documentation/guide/2-api/orders/node_modules/muon-core"
    ]
  ],
  "_from": "jsonutil@0.2.0",
  "_id": "jsonutil@0.2.0",
  "_inCache": true,
  "_location": "/jsonutil",
  "_npmUser": {
    "name": "mfncooper",
    "email": "mfncooper@gmail.com"
  },
  "_npmVersion": "1.1.66",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jsonutil@0.2.0",
    "scope": null,
    "escapedName": "jsonutil",
    "name": "jsonutil",
    "rawSpec": "0.2.0",
    "spec": "0.2.0",
    "type": "version"
  },
  "_requiredBy": [
    "/muon-core"
  ],
  "_resolved": "https://registry.npmjs.org/jsonutil/-/jsonutil-0.2.0.tgz",
  "_shasum": "fe1f9cf8735658660d5a178ef6f6789f8e2fead5",
  "_shrinkwrap": null,
  "_spec": "jsonutil@0.2.0",
  "_where": "/home/david/Development/microux/documentation/guide/2-api/orders/node_modules/muon-core",
  "author": {
    "name": "Martin Cooper",
    "email": "mfncooper@gmail.com"
  },
  "bugs": {
    "url": "http://github.com/mfncooper/jsonutil/issues"
  },
  "dependencies": {},
  "description": "Convenience functions for working with JSON",
  "devDependencies": {
    "nodeunit": "~0.7"
  },
  "directories": {},
  "dist": {
    "shasum": "fe1f9cf8735658660d5a178ef6f6789f8e2fead5",
    "tarball": "https://registry.npmjs.org/jsonutil/-/jsonutil-0.2.0.tgz"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "homepage": "https://github.com/mfncooper/jsonutil#readme",
  "keywords": [
    "json",
    "utility",
    "file",
    "read",
    "write",
    "deep",
    "copy",
    "clone"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/mfncooper/jsonutil/raw/master/LICENSE"
    }
  ],
  "main": "jsonutil.js",
  "maintainers": [
    {
      "name": "mfncooper",
      "email": "mfncooper@gmail.com"
    }
  ],
  "name": "jsonutil",
  "optionalDependencies": {},
  "readme": "# jsonutil - Convenience functions for working with JSON\n\nWorking with JSON in Node.js is pretty straightforward, but there are a couple\nof things that could be a bit more convenient. Examples are copying objects, as\nwell as reading them from, and writing them to, files. The jsonutil package\naddresses just those scenarios with a few handy utility functions.\n\n## Installation\n\nJust use npm:\n\n    npm install jsonutil\n\n## Copying JSON objects\n\n### deepCopy(obj)\n\nMakes a deep copy (a.k.a. clone) of the supplied object. This function reliably\ncopies only what is valid for a JSON object, array, or other element.\n\n__Arguments__\n\n* _obj_, the object of which a copy is to be made.\n\n### shallowCopy(obj)\n\nMakes a shallow (i.e. top level only) copy of the supplied object. This function\nreliably copies only what is valid for a JSON object, array, or other element.\n\n__Arguments__\n\n* _obj_, the object of which a copy is to be made.\n\n### copy(obj, shallow)\n\nMakes a copy of the supplied object, either shallow or deep, according to the\nsecond argument. This function reliably copies only what is valid for a JSON\nobject, array, or other element.\n\n__Arguments__\n\n* _obj_, the object of which a copy is to be made.\n* _shallow_, a boolean indicating whether the copy should be shallow or deep.\n\n## Working with JSON files\n\n### readFile(file, cb)\n\nReads a JSON file and parses it, calling the callback with the resulting object.\n\n__Arguments__\n\n* _file_, the file from which to read and parse JSON.\n* _cb(err, obj)_, a callback function that will be called with either the object\nread from the file, or an error.\n\n### readFileSync(file)\n\nA synchronous version of `readFile` (see above) that returns the parsed object\nor throws an error.\n\n### writeFile(file, obj, [indent], cb)\n\nWrites a JSON file with the specified data. Serializing the data will fail if\nthe data contains a cyclic structure.\n\n* _file_, the file to which the object will be written.\n* _obj_, the object to be written as JSON.\n* _indent_, the indentation level, in spaces, of the JSON output. [Default: no\nindentation]\n* _cb(err)_, a callback function that will be called with either null on\nsuccess, or an error.\n\n### writeFileSync(file, data, [indent])\n\nA synchronous version of `writeFile` (see above) that throws any error.\n\n## License\n\njsonutil is licensed under the [MIT License](http://github.com/mfncooper/jsonutil/raw/master/LICENSE).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mfncooper/jsonutil.git"
  },
  "scripts": {
    "test": "nodeunit test/*.js"
  },
  "version": "0.2.0"
}
